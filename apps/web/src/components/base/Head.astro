---
import { ClientRouter } from 'astro:transitions'

interface Props {
  title: string
  description: string
  // biome-ignore lint/suspicious/noExplicitAny: Astro props can be any type
  children?: any
}

const { title, description } = Astro.props

const type = (() => {
  if (Astro.url.pathname.startsWith('/updates')) return 'updates'
  if (Astro.url.pathname.startsWith('/snippets')) return 'snippets'
  return 'page'
})()

const slug = Astro.url.pathname.replace(/\/$/, '').split('/').pop()
---

<head>
  <title>{title}</title>

  <meta name="description" content={description} />

  <meta property="og:title" content={title} />
  <meta property="og:type" content="website" />
  <meta property="og:url" content={Astro.url} />

  <meta name="twitter:card" content="summary_large_image" />
  <meta property="twitter:domain" content={Astro.site} />
  <meta property="twitter:url" content={Astro.url} />
  <meta name="twitter:title" content={title} />
  <meta name="twitter:description" content={description} />

  <ClientRouter />

  {
    Astro.url.pathname !== "/" ? (
      <Fragment>
        <meta
          name="twitter:image"
          content={`${Astro.url.origin}/api/og-image/${type}/${slug}.png`}
        />
        <meta
          property="og:image"
          content={`${Astro.url.origin}/api/og-image/${type}/${slug}.png`}
        />
      </Fragment>
    ) : (
      <Fragment>
        <meta
          name="twitter:image"
          content={`${Astro.url.origin}/api/og-image/global.png`}
        />
        <meta
          property="og:image"
          content={`${Astro.url.origin}/api/og-image/global.png`}
        />
      </Fragment>
    )
  }

  <link rel="icon" type="image/x-icon" href="/images/favicon.webp" />

  <link
    rel="preload"
    href="/fonts/Anton400.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />
  <link
    rel="preload"
    href="/fonts/Satoshi-Variable.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />
  <link
    rel="preload"
    href="/fonts/Satoshi-VariableItalic.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />

  <script>
    import Lenis from "lenis";
    import "lenis/dist/lenis.css";

    const lenis = new Lenis({
      prevent: (node) => node.classList?.contains("prevent-lenis"),
    });

    function raf(time: number) {
      lenis.raf(time);
      requestAnimationFrame(raf);
    }

    requestAnimationFrame(raf);
  </script>

  <script type="text/partytown" defer src="https://analytics.alfanjauhari.com/script.js" data-website-id="616726df-fa46-46b9-bc91-84d78de258c0" data-domains="www.alfanjauhari.com"></script>
</head>
