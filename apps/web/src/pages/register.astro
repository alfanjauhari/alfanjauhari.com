---
export const prerender = false

import type { ActionInputError } from 'astro:actions'
import { actions, isInputError } from 'astro:actions'
import type { loginOperation } from 'payload'
import Button from '@/components/base/Button'
import SiteLayout from '@/layouts/SiteLayout.astro'
import { fetchAPI } from '@/libs/api'

const isAuthenticated = await fetchAPI<
  Awaited<ReturnType<typeof loginOperation>>
>('/users/me')
  .then((result) => result.user !== null)
  .catch(() => false)

if (isAuthenticated) {
  return Astro.redirect('/')
}

const result = Astro.getActionResult(actions.register)

let fieldErrors:
  | ActionInputError<{
      name: string
      email: string
      username: string
      password: string
      confirm_password: string
    }>
  | undefined

if (isInputError(result?.error)) {
  fieldErrors = result.error
}

if (result && !result.error) {
  return Astro.redirect('/login')
}
---

<SiteLayout title="Register" description="Create a new account" blank>
  <div class="flex items-center h-screen">
    <div class="bg-white px-6 flex flex-col justify-center w-1/3 h-full">
      <form method="POST" action={actions.register} class="space-y-4">
        {
          result && result.error && !isInputError(result.error) && (
            <p class="p-4 bg-red-600 text-white">{result.error.message}</p>
          )
        }
        <div class="space-y-2">
          <label for="name" class="block text-sm font-medium text-gray-700"
            >Name<span class="text-red-600">*</span></label
          >
          <input
            type="text"
            id="name"
            name="name"
            required
            class="block w-full p-2 border border-stone-300 focus:ring-stone-700 focus:border-stone-700 focus:outline-none"
            transition:persist
          />
          {
            fieldErrors?.fields.name && (
              <p class="text-red-600 text-sm">{fieldErrors.fields.name}</p>
            )
          }
        </div>
        <div class="space-y-2">
          <label for="email" class="block text-sm font-medium text-gray-700"
            >Email<span class="text-red-600">*</span></label
          >
          <input
            type="email"
            id="email"
            name="email"
            required
            class="block w-full p-2 border border-stone-300 focus:ring-stone-700 focus:border-stone-700 focus:outline-none"
            transition:persist
          />
          {
            fieldErrors?.fields.email && (
              <p class="text-red-600 text-sm">{fieldErrors.fields.email}</p>
            )
          }
        </div>
        <div class="space-y-2">
          <label for="password" class="block text-sm font-medium text-gray-700"
            >Password<span class="text-red-600">*</span></label
          >
          <input
            type="password"
            id="password"
            name="password"
            required
            class="block w-full p-2 border border-stone-300 focus:ring-stone-700 focus:border-stone-700 focus:outline-none"
            transition:persist
          />
          {
            fieldErrors?.fields.password && (
              <p class="text-red-600 text-sm">{fieldErrors.fields.password}</p>
            )
          }
        </div>
        <div class="space-y-2">
          <label
            for="confirm_password"
            class="block text-sm font-medium text-gray-700"
            >Confirm Password<span class="text-red-600">*</span></label
          >
          <input
            type="password"
            id="confirm_password"
            name="confirm_password"
            required
            class="block w-full p-2 border border-stone-300 focus:ring-stone-700 focus:border-stone-700 focus:outline-none"
            transition:persist
          />
          {
            fieldErrors?.fields.confirm_password && (
              <p class="text-red-600 text-sm">
                {fieldErrors.fields.confirm_password}
              </p>
            )
          }
        </div>
        <Button type="submit" className="text-xl p-4">Register</Button>
      </form>
    </div>
  </div>
</SiteLayout>
