---
import { getCollection } from 'astro:content'
import RestrictedUpdates from '@/components/ui/RestrictedUpdates.astro'
import { RevealHeading } from '@/components/ui/RevealHeading'
import UpdateCard from '@/components/ui/UpdateCard.astro'
import SiteLayout from '@/layouts/SiteLayout.astro'

export async function getStaticPaths() {
  const restrictedUpdates = getCollection('restricted')
  const generalUpdates = getCollection('updates')
  const updates = await Promise.all([restrictedUpdates, generalUpdates]).then(
    (res) => res.flat(),
  )

  const tags = new Set(updates.map((update) => update.data.tag))

  return Array.from(tags).map((tag) => ({
    params: { tag },
    props: { tag },
  }))
}

const { tag } = Astro.params

const restrictedUpdates = await getCollection('restricted').then((res) =>
  res.filter((update) => update.data.tag === tag),
)
const updates = await getCollection('updates').then((res) =>
  res.filter((update) => update.data.tag === tag),
)
---

<SiteLayout
  title="Updates"
  description="Latest updates, thought and random stuffs mixed in one place"
>
  <div class="flex flex-col gap-12 py-20">
    <RevealHeading
      client:visible
      className="text-6xl lg:text-10xl text-stone-700"
      >Latest Updates</RevealHeading
    >
    <div class="grid grid-cols-1 lg:grid-cols-2">
      {
        updates.map((update) => (
          <UpdateCard
            title={update.data.title}
            description={update.data.description}
            tag={update.data.tag}
            date={update.data.date}
            slug={update.id}
          />
        ))
      }
      <RestrictedUpdates data={restrictedUpdates} server:defer />
    </div>
  </div>
</SiteLayout>
