---
export const prerender = false

import { getEntry, render } from 'astro:content'
import SingleLayout from '@/layouts/SingleLayout.astro'
import { fetchAPI } from '@/libs/api'
import { auth } from '@/libs/auth'
import { isAPIError } from '@/libs/errors'

// #region Check auth

type Params = {
  slug: string
}

const { slug } = Astro.params as Params

const entry = await getEntry('restricted', slug)

if (!entry) {
  return new Response(null, {
    status: 404,
  })
}

const session = await auth.getSession({
  fetchOptions: {
    headers: Astro.request.headers,
  },
})

if (!session.data) {
  return Astro.redirect(
    `/login?redirectTo=${encodeURIComponent(Astro.url.pathname)}&message=${encodeURIComponent(`You must be logged in to access "${entry.data.title}" content!`)}`,
  )
}

const data = await fetchAPI<{
  id: string
  html: string
}>(`/api/contents/${entry.data.id}?select[html]=true&select[content]=true`, {
  headers: Astro.request.headers,
})
---

<SingleLayout {...entry.data} set:html={data.html} />
