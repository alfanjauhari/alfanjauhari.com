services:
  alfanjauhari_com_db:
    container_name: alfanjauhari_com_db
    build: ./db
    environment:
      POSTGRES_DB: ${DB_NAME:-alfanjauhari-com}
      POSTGRES_USER: ${DB_USER:-alfanjauhari}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-alfanjauhari}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - ${DB_PORT:-5432}:5432
    shm_size: '512mb'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-alfanjauhari} -d ${DB_NAME:-alfanjauhari-com}"]
      interval: 30s
      timeout: 20s
      retries: 3

  alfanjauhari_com_app:
    container_name: alfanjauhari_com_app
    build:
      context: .
      secrets:
        - BUILD_DATABASE_URL
    environment:
      DATABASE_URL: $DATABASE_URL
      NOTION_ACCESS_TOKEN: $NOTION_ACCESS_TOKEN
      TRAEFIK_URL: ${TRAEFIK_URL:-alfanjauhari.localhost}
    depends_on:
      - alfanjauhari_com_db
    ports:
      - :4321
    volumes:
      - app_data:/usr/src/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`${TRAEFIK_URL}`) || Host(`www.${TRAEFIK_URL}`)"
      - "traefik.http.routers.app.entrypoints=app,appsecure"
      - "traefik.http.routers.app.tls.certresolver=letsencrypt"

  alfanjauhari_com_traefik:
    image: traefik:v3.4
    container_name: alfanjauhari_com_traefik
    environment:
      TRAEFIK_SSL_EMAIL: ${TRAEFIK_SSL_EMAIL:-hi@alfanjauhari.com}
    command:
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.app.address=:80"
      - "--entryPoints.appsecure.address=:443"
      - "--entryPoints.app.http.redirections.entryPoint.to=appsecure"
      - "--entryPoints.app.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.letsencrypt.acme.email=${TRAEFIK_SSL_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/certs/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certs:/certs

volumes:
  pg_data:
    driver: local
  app_data:
    driver: local
  traefik-certs:
    driver: local

secrets:
  BUILD_DATABASE_URL:
    environment: BUILD_DATABASE_URL