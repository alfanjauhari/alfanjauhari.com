services:
  alfanjauhari_com_db:
    container_name: alfanjauhari_com_db
    build: postgres:17
    environment:
      POSTGRES_DB: ${DB_NAME:-alfanjauhari-com}
      POSTGRES_USER: ${DB_USER:-alfanjauhari}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-alfanjauhari}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:5432
    shm_size: "512mb"
    networks:
      - default
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USER:-alfanjauhari} -d ${DB_NAME:-alfanjauhari-com}",
        ]
      interval: 30s
      timeout: 20s
      retries: 3

  alfanjauhari_com_api:
    container_name: alfanjauhari_com_api
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
      secrets:
        - PAYLOAD_SECRET
    env_file:
      - ./apps/api/.env.production
    depends_on:
      alfanjauhari_com_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - :3000
    volumes:
      - app_data:/usr/src/app
    networks:
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${TRAEFIK_URL:-api.alfanjauhari.localhost}`) || Host(`${TRAEFIK_URL:-api.alfanjauhari.localhost}`)"
      - "traefik.http.routers.api.entrypoints=app,appsecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"

  alfanjauhari_com_web:
    container_name: alfanjauhari_com_web
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
      args:
        NODE_ENV: production
        PUBLIC_PAYLOAD_API_URL: $PUBLIC_PAYLOAD_API_URL
        PUBLIC_SITE_URL: $PUBLIC_SITE_URL
        PUBLIC_CDN_URL: $PUBLIC_CDN_URL
      network: host
    env_file:
      - ./apps/web/.env.production
    depends_on:
      alfanjauhari_com_api:
        condition: service_healthy
    ports:
      - :4321
    volumes:
      - app_data:/usr/src/app
    networks:
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`${TRAEFIK_URL:-alfanjauhari.localhost}`) || Host(`www.${TRAEFIK_URL:-alfanjauhari.localhost}`)"
      - "traefik.http.routers.web.entrypoints=app,appsecure"
      - "traefik.http.routers.web.tls.certresolver=letsencrypt"

  alfanjauhari_com_traefik:
    image: traefik:v3.4
    container_name: alfanjauhari_com_traefik
    environment:
      TRAEFIK_SSL_EMAIL: ${TRAEFIK_SSL_EMAIL:-hi@alfanjauhari.com}
    command:
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.app.address=:80"
      - "--entryPoints.appsecure.address=:443"
      - "--entryPoints.app.http.redirections.entryPoint.to=appsecure"
      - "--entryPoints.app.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.letsencrypt.acme.email=${TRAEFIK_SSL_EMAIL:-hi@alfanjauhari.com}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/certs/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    networks:
      - default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certs:/certs

volumes:
  pg_data:
    driver: local
  app_data:
    driver: local
  traefik-certs:
    driver: local

networks:
  default:
    driver: bridge

secrets:
  PAYLOAD_SECRET:
   environment: PAYLOAD_SECRET